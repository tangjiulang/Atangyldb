cmake_minimum_required(3.10)
set(CMAKE_CXX_STANDARD 17)

project(AtangylDB)

MESSAGE(STATUS "This is SOURCE dir" ${test_SOURCE_DIR})
MESSAGE(STATUS "This is BINARY dir" ${test_BINARY_DIR})
MESSAGE(STATUS "This is Project SOURCE dir" ${PROJECT_SOURCE_DIR})
MESSAGE(STATUS "This is Project BINARY dir" ${PROJECT_BINARY_DIR})

SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)

MESSAGE(STATUS "HOME dir: $ENV{HOME}")

IF(WIN32)
  MESSAGE(STATUS "This is Windows.")
  ADD_DEFINITIONS(-DWIN32)
ELSEIF(WIN64)
  MESSAGE(STATUS "This is Windows.")
  ADD_DEFINITIONS(-DWIN64)
ELSEIF(APPLE)
  MESSAGE(STATUS "This is apple.")
  ADD_DEFINITIONS(-D__MACH__)
ELSEIF(UNIX)
  MESSAGE(STATUS "This is UNIX.")
  ADD_DEFINITIONS(-DUNIX -DLINUX)
ELSE()
  MESSAGE(STATUS "This is UNIX.")
ENDIF()


SET(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -Wall -DCMAKE_EXPORT_COMPILE_COMMANDS=1")

IF(DEBUF)
  MESSAGE("DEBUG has been set as TRUE ${DEBUG}")
  SET(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS}  -O0 -g -DDEBUG ")
  ADD_DEFINITIONS(-DENABLE_DEBUG)
ELSEIF(NOT DEFINED ENV{DEBUG})
  MESSAGE("Disable debug")
  SET(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS}  -O2 -g ")
ELSE()
  MESSAGE("Enable debug")
  SET(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS}  -O0 -g -DDEBUG")
  ADD_DEFINITIONS(-DENABLE_DEBUG)
ENDIF()

SET(CMAKE_CXX_FLAGS ${CMAKE_COMMON_FLAGS})
SET(CMAKE_C_FLAGS ${CMAKE_COMMON_FLAGS})
MESSAGE("CMAKE_CXX_FLAGS is " ${CMAKE_CXX_FLAGS})

IF(CMAKE_INSTALL_PREFIX)
  MESSAGE("CMAKE_INSTALL_PREFIX has been set as " ${CMAKE_INSTALL_PREFIX})
ELSEIF(DEFINED ENV{CMAKE_INSTALL_PREFIX})
  SET(CMAKE_INSTALL_PREFIX $ENV{CMAKE_INSTALL_PREFIX})
ELSE()
  SET(CMAKE_INSTALL_PREFIX /tmp/${PROJECT_NAME})
ENDIF()
MESSAGE("Install target dir is" ${CMAKE_INSTALL_PREFIX})

ADD_SUBDIRECTORY(deps)
ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(test)
ADD_SUBDIRECTORY(uintest)

INSTALL(DIRECTORY etc DESTINATION .
		FILE_PERMISSIONS OWNER_WRITE OWNER_READ GROUP_READ WORLD_READ)

INSTALL(CODE "MESSAGE(\"Sample install message.\")")
